#############################################################################
# Makefile for building: client
# Generated by qmake (2.01a) (Qt 4.8.1) on: Mon Feb 24 21:13:00 2014
# Project:  client.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile client.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -L/usr/local/lib -lavdevice -lavfilter -lpostproc -lswresample -lavformat -lavcodec -lva -lXfixes -lXext -lX11 -lasound -lSDL -lx264 -lvpx -lvorbisenc -lvorbis -ltheoraenc -ltheoradec -logg -lopus -lmp3lame -lfdk-aac -lass -lz -lrt -ldl -lswscale -lavutil -lm -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = contentwidget.cpp \
		main.cpp \
		mainwidget.cpp \
		mypushbutton.cpp \
		skinwidget.cpp \
		statuswidget.cpp \
		sysbutton.cpp \
		titlewidget.cpp \
		toolbutton.cpp \
		toolwidget.cpp \
		first_item.cpp \
		first_item_pre.cpp \
		show/ffmtool.cpp \
		show/mythread.cpp \
		show/pre_main.cpp \
		show/sock.cpp \
		show/widget.cpp \
		content2/content2.cpp \
		content2/content2_pre.cpp moc_contentwidget.cpp \
		moc_mainwidget.cpp \
		moc_mypushbutton.cpp \
		moc_skinwidget.cpp \
		moc_statuswidget.cpp \
		moc_sysbutton.cpp \
		moc_titlewidget.cpp \
		moc_toolbutton.cpp \
		moc_toolwidget.cpp \
		moc_first_item.cpp \
		moc_first_item_pre.cpp \
		moc_mythread.cpp \
		moc_widget.cpp \
		moc_content2.cpp \
		moc_content2_pre.cpp \
		qrc_src.cpp
OBJECTS       = contentwidget.o \
		main.o \
		mainwidget.o \
		mypushbutton.o \
		skinwidget.o \
		statuswidget.o \
		sysbutton.o \
		titlewidget.o \
		toolbutton.o \
		toolwidget.o \
		first_item.o \
		first_item_pre.o \
		ffmtool.o \
		mythread.o \
		pre_main.o \
		sock.o \
		widget.o \
		content2.o \
		content2_pre.o \
		moc_contentwidget.o \
		moc_mainwidget.o \
		moc_mypushbutton.o \
		moc_skinwidget.o \
		moc_statuswidget.o \
		moc_sysbutton.o \
		moc_titlewidget.o \
		moc_toolbutton.o \
		moc_toolwidget.o \
		moc_first_item.o \
		moc_first_item_pre.o \
		moc_mythread.o \
		moc_widget.o \
		moc_content2.o \
		moc_content2_pre.o \
		qrc_src.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		client.pro
QMAKE_TARGET  = client
DESTDIR       = 
TARGET        = client

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: client.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile client.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile client.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/client1.0.0 || $(MKDIR) .tmp/client1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/client1.0.0/ && $(COPY_FILE) --parents contentwidget.h mainwidget.h mypushbutton.h skinwidget.h statuswidget.h sysbutton.h titlewidget.h toolbutton.h toolwidget.h first_item.h first_item_pre.h show/bo.h show/ffmtool.h show/mythread.h show/pre_main.h show/sock.h show/widget.h content2/content2.h content2/content2_pre.h .tmp/client1.0.0/ && $(COPY_FILE) --parents src.qrc .tmp/client1.0.0/ && $(COPY_FILE) --parents contentwidget.cpp main.cpp mainwidget.cpp mypushbutton.cpp skinwidget.cpp statuswidget.cpp sysbutton.cpp titlewidget.cpp toolbutton.cpp toolwidget.cpp first_item.cpp first_item_pre.cpp show/ffmtool.cpp show/mythread.cpp show/pre_main.cpp show/sock.cpp show/widget.cpp content2/content2.cpp content2/content2_pre.cpp .tmp/client1.0.0/ && (cd `dirname .tmp/client1.0.0` && $(TAR) client1.0.0.tar client1.0.0 && $(COMPRESS) client1.0.0.tar) && $(MOVE) `dirname .tmp/client1.0.0`/client1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/client1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_contentwidget.cpp moc_mainwidget.cpp moc_mypushbutton.cpp moc_skinwidget.cpp moc_statuswidget.cpp moc_sysbutton.cpp moc_titlewidget.cpp moc_toolbutton.cpp moc_toolwidget.cpp moc_first_item.cpp moc_first_item_pre.cpp moc_mythread.cpp moc_widget.cpp moc_content2.cpp moc_content2_pre.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_contentwidget.cpp moc_mainwidget.cpp moc_mypushbutton.cpp moc_skinwidget.cpp moc_statuswidget.cpp moc_sysbutton.cpp moc_titlewidget.cpp moc_toolbutton.cpp moc_toolwidget.cpp moc_first_item.cpp moc_first_item_pre.cpp moc_mythread.cpp moc_widget.cpp moc_content2.cpp moc_content2_pre.cpp
moc_contentwidget.cpp: first_item.h \
		contentwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) contentwidget.h -o moc_contentwidget.cpp

moc_mainwidget.cpp: mainwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwidget.h -o moc_mainwidget.cpp

moc_mypushbutton.cpp: mypushbutton.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mypushbutton.h -o moc_mypushbutton.cpp

moc_skinwidget.cpp: skinwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) skinwidget.h -o moc_skinwidget.cpp

moc_statuswidget.cpp: statuswidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) statuswidget.h -o moc_statuswidget.cpp

moc_sysbutton.cpp: sysbutton.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) sysbutton.h -o moc_sysbutton.cpp

moc_titlewidget.cpp: titlewidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) titlewidget.h -o moc_titlewidget.cpp

moc_toolbutton.cpp: toolbutton.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) toolbutton.h -o moc_toolbutton.cpp

moc_toolwidget.cpp: toolwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) toolwidget.h -o moc_toolwidget.cpp

moc_first_item.cpp: first_item.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) first_item.h -o moc_first_item.cpp

moc_first_item_pre.cpp: first_item_pre.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) first_item_pre.h -o moc_first_item_pre.cpp

moc_mythread.cpp: show/bo.h \
		show/mythread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) show/mythread.h -o moc_mythread.cpp

moc_widget.cpp: show/mythread.h \
		show/bo.h \
		show/widget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) show/widget.h -o moc_widget.cpp

moc_content2.cpp: show/widget.h \
		show/mythread.h \
		show/bo.h \
		content2/content2.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) content2/content2.h -o moc_content2.cpp

moc_content2_pre.cpp: content2/content2_pre.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) content2/content2_pre.h -o moc_content2_pre.cpp

compiler_rcc_make_all: qrc_src.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_src.cpp
qrc_src.cpp: src.qrc \
		img/sysButton/sys_button_close.png \
		img/sysButton/sys_button_min.png \
		img/sysButton/title_bar_menu.png \
		img/sysButton/SkinButton.png \
		img/sysButton/sys_button_max.png \
		icon/e.png \
		icon/b9.jpg \
		icon/l.png \
		icon/penguin.png \
		icon/b3.jpg \
		icon/f.png \
		icon/b4small.jpg \
		icon/m.png \
		icon/b8small.jpg \
		icon/b4.jpg \
		icon/g.png \
		icon/b9small.jpg \
		icon/n.png \
		icon/a.png \
		icon/b5.jpg \
		icon/b1small.jpg \
		icon/h.png \
		icon/o.png \
		icon/b5small.jpg \
		icon/b.png \
		icon/penguin3.png \
		icon/b6.jpg \
		icon/i.png \
		icon/p.png \
		icon/qt-logo.png \
		icon/c.png \
		icon/b2small.jpg \
		icon/b7.jpg \
		icon/j.png \
		icon/b6small.jpg \
		icon/b1.jpg \
		icon/d.png \
		icon/b8.jpg \
		icon/k.png \
		icon/b3small.jpg \
		icon/penguintvicon.png \
		icon/b2.jpg \
		icon/b7small.jpg
	/usr/bin/rcc -name src src.qrc -o qrc_src.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

contentwidget.o: contentwidget.cpp contentwidget.h \
		first_item.h \
		first_item_pre.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o contentwidget.o contentwidget.cpp

main.o: main.cpp mainwidget.h \
		statuswidget.h \
		titlewidget.h \
		toolwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwidget.o: mainwidget.cpp mainwidget.h \
		titlewidget.h \
		toolwidget.h \
		statuswidget.h \
		contentwidget.h \
		first_item.h \
		skinwidget.h \
		content2/content2.h \
		show/widget.h \
		show/mythread.h \
		show/bo.h \
		content2/content2_pre.h \
		toolbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwidget.o mainwidget.cpp

mypushbutton.o: mypushbutton.cpp mypushbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mypushbutton.o mypushbutton.cpp

skinwidget.o: skinwidget.cpp skinwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o skinwidget.o skinwidget.cpp

statuswidget.o: statuswidget.cpp statuswidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o statuswidget.o statuswidget.cpp

sysbutton.o: sysbutton.cpp sysbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sysbutton.o sysbutton.cpp

titlewidget.o: titlewidget.cpp titlewidget.h \
		sysbutton.h \
		mypushbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o titlewidget.o titlewidget.cpp

toolbutton.o: toolbutton.cpp toolbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o toolbutton.o toolbutton.cpp

toolwidget.o: toolwidget.cpp toolwidget.h \
		toolbutton.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o toolwidget.o toolwidget.cpp

first_item.o: first_item.cpp first_item.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o first_item.o first_item.cpp

first_item_pre.o: first_item_pre.cpp first_item_pre.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o first_item_pre.o first_item_pre.cpp

ffmtool.o: show/ffmtool.cpp show/bo.h \
		show/ffmtool.h \
		show/pre_main.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ffmtool.o show/ffmtool.cpp

mythread.o: show/mythread.cpp show/mythread.h \
		show/bo.h \
		show/ffmtool.h \
		show/pre_main.h \
		show/sock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mythread.o show/mythread.cpp

pre_main.o: show/pre_main.cpp show/pre_main.h \
		show/bo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pre_main.o show/pre_main.cpp

sock.o: show/sock.cpp show/bo.h \
		show/sock.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sock.o show/sock.cpp

widget.o: show/widget.cpp show/widget.h \
		show/mythread.h \
		show/bo.h \
		content2/content2.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o widget.o show/widget.cpp

content2.o: content2/content2.cpp content2/content2.h \
		show/widget.h \
		show/mythread.h \
		show/bo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o content2.o content2/content2.cpp

content2_pre.o: content2/content2_pre.cpp content2/content2_pre.h \
		content2/content2.h \
		show/widget.h \
		show/mythread.h \
		show/bo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o content2_pre.o content2/content2_pre.cpp

moc_contentwidget.o: moc_contentwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_contentwidget.o moc_contentwidget.cpp

moc_mainwidget.o: moc_mainwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwidget.o moc_mainwidget.cpp

moc_mypushbutton.o: moc_mypushbutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mypushbutton.o moc_mypushbutton.cpp

moc_skinwidget.o: moc_skinwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_skinwidget.o moc_skinwidget.cpp

moc_statuswidget.o: moc_statuswidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_statuswidget.o moc_statuswidget.cpp

moc_sysbutton.o: moc_sysbutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sysbutton.o moc_sysbutton.cpp

moc_titlewidget.o: moc_titlewidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_titlewidget.o moc_titlewidget.cpp

moc_toolbutton.o: moc_toolbutton.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_toolbutton.o moc_toolbutton.cpp

moc_toolwidget.o: moc_toolwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_toolwidget.o moc_toolwidget.cpp

moc_first_item.o: moc_first_item.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_first_item.o moc_first_item.cpp

moc_first_item_pre.o: moc_first_item_pre.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_first_item_pre.o moc_first_item_pre.cpp

moc_mythread.o: moc_mythread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mythread.o moc_mythread.cpp

moc_widget.o: moc_widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_widget.o moc_widget.cpp

moc_content2.o: moc_content2.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_content2.o moc_content2.cpp

moc_content2_pre.o: moc_content2_pre.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_content2_pre.o moc_content2_pre.cpp

qrc_src.o: qrc_src.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_src.o qrc_src.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

